{"version":3,"sources":["athens/core.cljs"],"mappings":";;;;;;;;;;;;AAcA,AAAA,AAAMA;AAAN,AACE,AAAMC;AAAN,AACE,AAAA,AAACC;;AADH;;;AAGF,AAAA,AAAuBC;AAAvB,AACE,AAACC,AAAAA,AAAAA;;AACD,AAACC;;AACD,AAAA,AAACC,AAAgBC,AACD,AAAA,AAAiBC;;AAEnC,AAAA,AAAMC;AAAN,AACE,AAAAC,AAAA,AAAA;AAAA,AAAA,AAAAA,AAAAA,AAACC,AAAAA,AAAAA;;AAED,AAAMV;AAAN,AACE,AAAAW,AAAA,AAAA;AAAA,AAAA,AAAAA,AAAAA,AAACC,AAAAA,AAAAA;;AADH;;AAEA,AAACb;;AACD,AAACG","names":["athens.core/dev-setup","athens.config/debug?","cljs.core.println.cljs$core$IFn$_invoke$arity$variadic","athens.core/mount-root","re-frame.core/clear-subscription-cache!","athens.router/init-routes!","reagent.core.render.cljs$core$IFn$_invoke$arity$2","athens.views/main-panel","js/document","athens.core/init","G__49803","re-frame.core/dispatch-sync","G__49804","re-frame.core/dispatch"],"sourcesContent":["(ns athens.core\n  (:require\n   [athens.events]\n   [athens.subs]\n   [athens.views :as views]\n   [athens.config :as config]\n   [athens.db :as db]\n   [athens.router :as router]\n   [athens.parser :refer [parser]]\n   [reagent.core :as reagent]\n   [re-frame.core :as rf]\n   [re-posh.core :as rp]\n   ))\n\n(defn dev-setup []\n  (when config/debug?\n    (println \"dev mode\")))\n\n(defn ^:dev/after-load mount-root []\n  (rf/clear-subscription-cache!)\n  (router/init-routes!)\n  (reagent/render [views/main-panel]\n                  (.getElementById js/document \"app\")))\n\n(defn init []\n  (rf/dispatch-sync [:init-rfdb])\n  ;; when dev, download datoms directly\n  (when config/debug?\n    (rf/dispatch [:boot]))\n  (dev-setup)\n  (mount-root))\n"]}